{"version":3,"file":"zxdom.js","sources":["../src/index.js"],"sourcesContent":["/*\n\nTODO: write tests for onremove-prevent-remove behavior\nwhen we go to remove a node, we only respect the return value\nof onremoves from the top node. Children wo return true from their onremove calls are not preserved (they go when the parent goes)\nHowever, we still need to call their eventual onremove hooks.\n\nTODO: write tests for checkboxes, and boolean attrs (maybe done already?)\n\nTODO: write tests for svg support if possible.\n\nTODO refactor functions that will use less property-names, and also make the code more readable and descriptive what is being done.\n\nTODO refactor tests to be more descriptive of the api and less \"incrementally built up\"\n\nTODO: Optimize: textnodes are always inserted, then the old ones removed. If they're the same string we could leave them alone\n\nTODO: Optimize: If keyed nodes move down, we will instead move *up* every subsequent nodes one step. COuld be optimized\nby just building a list of moves, and notice that a series of up-moves of one, could be replaced by a single\ndown move (maybe?)\n\nTODO: transitions included as an optional (tree-shakeabke) module\n\nTODO: Example with forms and validation Something with forms and validations\n\nTODO: Prettier example-pages\n\nTODO: Docs. Pitch, Getting Started, In depth walkthrough (including live runnable examples),  Introduce the Examples, API docs. Use the docs folder so github makes a website for it.\n\nTODO: SVG Logo & fancy splash pages\n\nTODO: Setup Stefan Krauses benchmark and see where we're at\n*/\n\n\nfunction seekIndex(list, fn, start = 0) {\n    return list.reduce((found, item, index) => (index < start || found > -1 || !fn(item)) ? found : index, -1)\n}\n\n\nfunction setAttribute(el, name, oldval, val) {\n    if (name === 'key' || name === 'value' || name === 'checked' || name.substr(0,2) === 'on') {\n        el[name] = val\n    } else if (val == null || val === false) {\n        el.removeAttribute(name)\n    } else if (oldval !== val) {\n        el.setAttribute(name, val)\n    }\n}\n\nfunction updateAttributes (el, oldattr, newattr) {\n    Object.keys(oldattr).forEach(name => {\n        if (newattr[name] == null) setAttribute(el, name)\n    })\n    Object.keys(newattr).forEach(name => {\n        setAttribute(el, name, oldattr[name], newattr[name])\n    })\n}\n\nfunction willRemove(el, oldvnode) {\n    let prevent = false\n    if (oldvnode.type) {\n        const {type, attributes, children} = oldvnode\n        if (type.func) {\n            const inst = getInstanceIndex(type, el)\n            prevent = willRemove(el, type.instances[inst].vnode)\n            type.instances.splice(inst, 1)\n        } else {\n            children.map((chvnode, i) => willRemove(el.childNodes[i], chvnode))\n            if (attributes.onremove) { prevent = attributes.onremove(el) }\n        }    \n    }\n    return prevent\n}\n\nfunction remove(el, oldvnode) {\n    if (willRemove(el, oldvnode)) return false\n    el.parentNode && el.parentNode.removeChild(el)\n    return true\n}\n\nfunction replace (el, oldvnode, newvnode) {\n    const prevent = willRemove(el, oldvnode)\n    const newel = make(newvnode)\n    if (el.parentNode) {\n        if (prevent) el.parentNode.insertBefore(newel, el)\n        else el.parentNode.replaceChild(newel, el)\n    }\n    return newel\n}\n\nfunction getKey (node) {\n    const attr = node.attributes\n    return (attr && attr.key) ? attr.key : null \n}\n\n\nfunction morphInstance (oldel, view, attributes, children) {\n    const vnode = view.func(Object.assign({}, attributes, view.data), children)\n    const inst = getInstanceIndex(view, oldel)\n    const oldvnode = view.instances[inst].vnode\n    const el = (getKey(oldvnode) === getKey(vnode) ? patch : replace)(oldel, oldvnode, vnode)\n    view.instances.splice(inst, 1, {el, vnode, attributes, children})\n    return el\n}\n\n\nfunction seekId(node) {\n    return node.type ? (node.attributes.key || node.type) : node\n}\n\nfunction seekNode(list, node, start) {\n    const sought = seekId(node)\n    return seekIndex(list, item => (seekId(item) === sought), start)\n}\n\nfunction patchChildren(parent, oldch, newch) {\n    let n = 0\n    while (n < oldch.length && n < newch.length) {\n        let o = seekNode(oldch, newch[n], n)\n        if (o < 0) {\n            parent.insertBefore(make(newch[n]), parent.childNodes[n])\n            oldch.splice(n, 0, '')\n        } else {\n            if (o != n) {\n                parent.insertBefore(parent.childNodes[o], parent.childNodes[n])\n                oldch.splice(n, 0, oldch.splice(o, 1)[0])\n            }\n            patch(parent.childNodes[n], oldch[n], newch[n])\n        }\n        n++\n    }\n    while (n < oldch.length) {\n        const didRemove = remove(parent.childNodes[n], oldch[n])\n        if (!didRemove) n++\n    }\n    while (n < newch.length)  parent.appendChild(make(newch[n++]))\n}\n\n\nfunction morphVNode(el, oldattr, oldch, newattr, newch) {\n    updateAttributes(el, oldattr, newattr)\n    patchChildren(el, oldch, newch)\n    newattr.onupdate && newattr.onupdate(el)\n    return el\n}\n\n\nfunction morph (el, oldvnode, {type, attributes, children}) {\n    if (type.func) return morphInstance(el, type, attributes, children)\n    else return morphVNode(el, oldvnode.attributes, oldvnode.children, attributes, children)\n}\n\n\nfunction patch (el, oldnode, newnode) {\n    return (oldnode.type && oldnode.type === newnode.type ? morph : replace)(el, oldnode, newnode) \n}\n\nfunction getInstanceIndex(type, el) {\n    return seekIndex(type.instances, inst => (inst.el === el))\n}\n\nfunction makeView (type, attributes, children) {\n    const vnode = type.func(Object.assign({}, attributes, type.data), children) //common with morphInstance --> factor out.\n    const el = make(vnode)\n    type.instances = type.instances || []\n    type.instances.push({el, vnode, attributes, children})\n    return el\n}\n\nfunction makeNode ({type, attributes={}, children=[]}, svg=false) {\n    if (type.func) return makeView(type, attributes, children)\n    svg = svg || (type === 'svg')\n    const el = svg ? document.createElementNS('http://www.w3.org/2000/svg', type) : document.createElement(type)\n    updateAttributes(el, {}, attributes)\n    children.forEach(chnode => el.appendChild(make(chnode, svg)))\n    attributes.oncreate && attributes.oncreate(el)\n    return el\n}\n\nfunction make (vnode, svg) {\n    return vnode.func ? make(h(vnode)) : vnode.type ? makeNode(vnode, svg) : document.createTextNode(vnode)\n}\n\nfunction h (type, attributes, ...children) {\n    attributes = attributes || {}\n    children = [].concat(...[].concat(...children)).filter(c => (c !== false && c != null))\n    return (typeof type === 'function') ? type(attributes, children) : {type, attributes, children}\n}\n\nfunction define (func, data) {\n    return {func, data}\n}\n\nfunction mount (vnode, container) {\n    const el = make(vnode)\n    container.innerHTML = ''\n    container.appendChild(el)\n}\n\nfunction update (view, data) {\n    view.data = data\n    view.instances = view.instances || [] //common pattern with makeInstance --> factor out\n    view.instances.forEach(inst => morphInstance(inst.el, view, inst.attributes, inst.children))\n}\n\nexport {h, patch, make, mount, define, update}"],"names":[],"mappings":"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"}