{"version":3,"sources":["dist/zxdom.js"],"names":["global","factory","exports","module","define","amd","zxdom","this","h","type","attributes","children","concat","filter","c","make","vnode","svg","func","vnodeForView","el","instances","push","document","createElementNS","createElement","updateAttributes","forEach","chnode","appendChild","createTextNode","patch","oldnode","newnode","patchInstance","oldattr","oldch","newattr","newch","parent","slice","n","length","o","seekNode","insertBefore","childNodes","splice","removeChild","patchChildren","patchElement","replace","newvnode","newel","parentNode","replaceChild","oldel","view","getKey","node","attr","key","inst","seekIndex","oldvnode","Object","assign","data","list","start","sought","seekId","item","keys","name","setAttribute","oldval","val","substr","removeAttribute","fn","reduce","found","index","mount","container","innerHTML","update","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.zxdom = {})));\n}(this, (function (exports) { 'use strict';\n\n    /*\n    TODO refactor tests to be more descriptive of the api and less \"incrementally built up\"\n\n    TODO: Optimize: textnodes are always inserted, then the old ones removed. If they're the same string we could leave them alone\n    TODO: Optimize: If keyed nodes move down, we will instead move *up* every subsequent nodes one step. COuld be optimized\n    by just building a list of moves, and notice that a series of up-moves of one, could be replaced by a single\n    down move (maybe?)\n    */\n\n    function h (type, attributes, ...children) {\n        attributes = attributes || {};\n        children = [].concat(...[].concat(...children)).filter(c => (c !== false && c != null));\n        return (typeof type === 'function') ? type(attributes, children) : {type, attributes, children}\n    }\n\n    function mount (vnode, container) {\n        const el = make(vnode);\n        container.innerHTML = '';\n        container.appendChild(el);\n        return el\n    }\n\n    function define (func, data) {\n        return {func, data}\n    }\n\n    function update (view, data) {\n        view.data = data;\n        view.instances = view.instances || []; //common pattern with makeInstance --> factor out\n        view.instances.forEach(inst => patchInstance(inst.el, view, inst.attributes, inst.children));\n    }\n\n    //-------------\n\n    function make (vnode, svg) {\n        if (vnode.func) return make(h(vnode))\n        if (!vnode.type) return document.createTextNode(vnode)\n        return (vnode.type.func ? makeInstance : makeElement)(vnode, svg)\n    }\n\n    function patch (el, oldnode, newnode) {\n        if (oldnode.type && oldnode.type === newnode.type) {\n            if (oldnode.type.func) {\n                el = patchInstance(el, newnode.type, newnode.attributes, newnode.children);\n            } else {\n                el = patchElement(el, oldnode.attributes, oldnode.children, newnode.attributes, newnode.children);\n            }\n        } else {\n            el = replace(el, newnode);\n        }\n        return el\n    }\n\n    function replace (el, newvnode) {\n        const newel = make(newvnode);\n        el.parentNode && el.parentNode.replaceChild(newel, el);\n        return newel\n    }\n\n    //-------------\n\n    function makeInstance ({type, attributes, children}) {\n        const vnode = vnodeForView(type, attributes, children);\n        const el = make(vnode);\n        type.instances = type.instances || [];\n        type.instances.push({el, vnode, attributes, children});\n        return el\n    }\n\n    function patchInstance (oldel, view, attributes, children) {\n        function getKey (node) {\n            const attr = node.attributes;\n            return (attr && attr.key) ? attr.key : null \n        }\n        const vnode = vnodeForView(view, attributes, children);\n        const inst = seekIndex(view.instances, inst => (inst.el === oldel));\n        const oldvnode = view.instances[inst].vnode;\n        const el = (getKey(oldvnode) === getKey(vnode)) ? patch(oldel, oldvnode, vnode) : replace(oldel, vnode);\n        view.instances.splice(inst, 1, {el, vnode, attributes, children});\n        return el\n    }\n\n    function vnodeForView(type, attributes, children) {\n        return type.func(Object.assign({}, attributes, type.data), children)\n    }\n\n    //-------------\n\n    function makeElement ({type, attributes, children}, svg=false) {\n        svg = svg || (type === 'svg');\n        const el = svg ? document.createElementNS('http://www.w3.org/2000/svg', type) : document.createElement(type);\n        updateAttributes(el, {}, attributes);\n        children.forEach(chnode => el.appendChild(make(chnode, svg)));\n        return el\n    }\n\n    function patchElement(el, oldattr, oldch, newattr, newch) {\n        updateAttributes(el, oldattr, newattr);\n        patchChildren(el, oldch, newch);\n        return el\n    }\n\n\n    //-----------------\n\n    function patchChildren(parent, oldch, newch) {\n        oldch = oldch.slice(); //copy, since we'll be mutating it further down.\n        let n = 0;\n        while (n < oldch.length && n < newch.length) {\n            let o = seekNode(oldch, newch[n], n);\n            if (o < 0) {\n                parent.insertBefore(make(newch[n]), parent.childNodes[n]);\n                oldch.splice(n, 0, '');\n            } else {\n                if (o != n) {\n                    parent.insertBefore(parent.childNodes[o], parent.childNodes[n]);\n                    oldch.splice(n, 0, oldch.splice(o, 1)[0]);\n                }\n                patch(parent.childNodes[n], oldch[n], newch[n]);\n            }\n            n++;\n        }\n        while (n < oldch.length) {\n            parent.removeChild(parent.childNodes[n]);\n            oldch.splice(n, 1);\n        }\n        while (n < newch.length)  parent.appendChild(make(newch[n++]));\n    }\n\n\n    function seekNode(list, node, start) {\n        const sought = seekId(node);\n        return seekIndex(list, item => (seekId(item) === sought), start)\n    }\n\n    function seekId(node) {\n        return node.type ? (node.attributes.key || node.type) : node\n    }\n\n    function updateAttributes (el, oldattr, newattr) {\n        Object.keys(oldattr).forEach(name => {\n            if (newattr[name] == null) setAttribute(el, name);\n        });\n        Object.keys(newattr).forEach(name => {\n            setAttribute(el, name, oldattr[name], newattr[name]);\n        });\n    }\n\n    function setAttribute(el, name, oldval, val) {\n        if (name === 'key' || name === 'value' || name === 'checked' || name.substr(0,2) === 'on') {\n            el[name] = val;\n        } else if (val == null || val === false) {\n            el.removeAttribute(name);\n        } else if (oldval !== val) {\n            el.setAttribute(name, val);\n        }\n    }\n\n    //----------------\n\n    function seekIndex(list, fn, start = 0) {\n        return list.reduce((found, item, index) => (index < start || found > -1 || !fn(item)) ? found : index, -1)\n    }\n\n    exports.h = h;\n    exports.patch = patch;\n    exports.make = make;\n    exports.mount = mount;\n    exports.define = define;\n    exports.update = update;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=zxdom.js.map\n"]}