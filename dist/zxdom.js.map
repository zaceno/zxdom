{"version":3,"sources":["dist/zxdom.js"],"names":["global","factory","exports","module","define","amd","zxdom","this","h","type","attributes","children","concat","filter","c","make","vnode","svg","func","vnodeForView","el","instances","push","document","createElementNS","createElement","updateAttributes","forEach","chnode","appendChild","oncreate","createTextNode","patch","oldnode","newnode","patchInstance","oldattr","oldch","newattr","newch","parent","slice","n","length","o","seekNode","insertBefore","childNodes","splice","didRemove","remove","patchChildren","onupdate","patchElement","replace","oldvnode","willRemove","parentNode","removeChild","newvnode","newel","replaceChild","index","getInstanceIndex","instance","willRemoveInstance","i","onremove","willRemoveElement","oldel","view","getKey","node","attr","key","inst","seekIndex","Object","assign","data","list","start","sought","seekId","item","keys","name","setAttribute","oldval","val","substr","removeAttribute","fn","reduce","found","mount","container","innerHTML","update","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.zxdom = {})));\n}(this, (function (exports) { 'use strict';\n\n    /*\n    TODO refactor tests to be more descriptive of the api and less \"incrementally built up\"\n\n    TODO: Optimize: textnodes are always inserted, then the old ones removed. If they're the same string we could leave them alone\n    TODO: Optimize: If keyed nodes move down, we will instead move *up* every subsequent nodes one step. COuld be optimized\n    by just building a list of moves, and notice that a series of up-moves of one, could be replaced by a single\n    down move (maybe?)\n    */\n\n    function h (type, attributes, ...children) {\n        attributes = attributes || {};\n        children = [].concat(...[].concat(...children)).filter(c => (c !== false && c != null));\n        return (typeof type === 'function') ? type(attributes, children) : {type, attributes, children}\n    }\n\n    function mount (vnode, container) {\n        const el = make(vnode);\n        container.innerHTML = '';\n        container.appendChild(el);\n        return el\n    }\n\n    function define (func, data) {\n        return {func, data}\n    }\n\n\n    function update (view, data) {\n        view.data = data;\n        view.instances = view.instances || []; //common pattern with makeInstance --> factor out\n        view.instances.forEach(inst => patchInstance(inst.el, view, inst.attributes, inst.children));\n    }\n\n    //-------------\n\n    function make (vnode, svg) {\n        if (vnode.func) return make(h(vnode))\n        if (!vnode.type) return document.createTextNode(vnode)\n        return (vnode.type.func ? makeInstance : makeElement)(vnode, svg)\n    }\n\n    function patch (el, oldnode, newnode) {\n        if (oldnode.type && oldnode.type === newnode.type) {\n            if (oldnode.type.func) {\n                el = patchInstance(el, newnode.type, newnode.attributes, newnode.children);\n            } else {\n                el = patchElement(el, oldnode.attributes, oldnode.children, newnode.attributes, newnode.children);\n            }\n        } else {\n            el = replace(el, oldnode, newnode);\n        }\n        return el\n    }\n\n    function remove(el, oldvnode) {\n        willRemove(el, oldvnode);\n        el.parentNode && el.parentNode.removeChild(el);\n        return true\n    }\n\n    function replace (el, oldvnode, newvnode) {\n        const newel = make(newvnode);\n        willRemove(el, oldvnode);\n        el.parentNode && el.parentNode.replaceChild(newel, el);\n        return newel\n    }\n\n    function willRemove(el, oldvnode) {\n        if (!oldvnode.type) return false\n        if (oldvnode.type.func) return willRemoveInstance(el, oldvnode)\n        return willRemoveElement(el, oldvnode)\n    }\n\n    //-------------\n\n    function makeInstance ({type, attributes, children}) {\n        const vnode = vnodeForView(type, attributes, children);\n        const el = make(vnode);\n        type.instances = type.instances || [];\n        type.instances.push({el, vnode, attributes, children});\n        return el\n    }\n\n    function patchInstance (oldel, view, attributes, children) {\n        function getKey (node) {\n            const attr = node.attributes;\n            return (attr && attr.key) ? attr.key : null \n        }\n        const vnode = vnodeForView(view, attributes, children);\n        const inst = getInstanceIndex(view, oldel);\n        const oldvnode = view.instances[inst].vnode;\n        const el = (getKey(oldvnode) === getKey(vnode) ? patch : replace)(oldel, oldvnode, vnode);\n        view.instances.splice(inst, 1, {el, vnode, attributes, children});\n        return el\n    }\n\n    function willRemoveInstance (el, {type}) {\n        const index = getInstanceIndex(type, el);\n        const instance = type.instances[index];\n        type.instances.splice(index, 1);\n        return willRemove(el, instance.vnode)\n    }\n\n    function getInstanceIndex(type, el) {\n        return seekIndex(type.instances, inst => (inst.el === el))\n    }\n\n    function vnodeForView(type, attributes, children) {\n        return type.func(Object.assign({}, attributes, type.data), children)\n    }\n\n    //-------------\n\n    function makeElement ({type, attributes, children}, svg=false) {\n        svg = svg || (type === 'svg');\n        const el = svg ? document.createElementNS('http://www.w3.org/2000/svg', type) : document.createElement(type);\n        updateAttributes(el, {}, attributes);\n        children.forEach(chnode => el.appendChild(make(chnode, svg)));\n        attributes.oncreate && attributes.oncreate(el);\n        return el\n    }\n\n    function patchElement(el, oldattr, oldch, newattr, newch) {\n        updateAttributes(el, oldattr, newattr);\n        patchChildren(el, oldch, newch);\n        newattr.onupdate && newattr.onupdate(el);\n        return el\n    }\n\n    function willRemoveElement (el, {attributes, children}) {\n        children.forEach((c, i) => willRemove(el.childNodes[i], c));\n        return attributes.onremove && attributes.onremove(el, el.parentNode)\n    }\n\n    //-----------------\n\n    function patchChildren(parent, oldch, newch) {\n        oldch = oldch.slice(); //copy, since we'll be mutating it further down.\n        let n = 0;\n        while (n < oldch.length && n < newch.length) {\n            let o = seekNode(oldch, newch[n], n);\n            if (o < 0) {\n                parent.insertBefore(make(newch[n]), parent.childNodes[n]);\n                oldch.splice(n, 0, '');\n            } else {\n                if (o != n) {\n                    parent.insertBefore(parent.childNodes[o], parent.childNodes[n]);\n                    oldch.splice(n, 0, oldch.splice(o, 1)[0]);\n                }\n                patch(parent.childNodes[n], oldch[n], newch[n]);\n            }\n            n++;\n        }\n        while (n < oldch.length) {\n            const didRemove = remove(parent.childNodes[n], oldch[n]);\n            if (!didRemove) n++;\n            else oldch.splice(n, 1);\n        }\n        while (n < newch.length)  parent.appendChild(make(newch[n++]));\n    }\n\n\n    function seekNode(list, node, start) {\n        const sought = seekId(node);\n        return seekIndex(list, item => (seekId(item) === sought), start)\n    }\n\n    function seekId(node) {\n        return node.type ? (node.attributes.key || node.type) : node\n    }\n\n    function updateAttributes (el, oldattr, newattr) {\n        Object.keys(oldattr).forEach(name => {\n            if (newattr[name] == null) setAttribute(el, name);\n        });\n        Object.keys(newattr).forEach(name => {\n            setAttribute(el, name, oldattr[name], newattr[name]);\n        });\n    }\n\n    function setAttribute(el, name, oldval, val) {\n        if (name === 'key' || name === 'value' || name === 'checked' || name.substr(0,2) === 'on') {\n            el[name] = val;\n        } else if (val == null || val === false) {\n            el.removeAttribute(name);\n        } else if (oldval !== val) {\n            el.setAttribute(name, val);\n        }\n    }\n\n    //----------------\n\n    function seekIndex(list, fn, start = 0) {\n        return list.reduce((found, item, index) => (index < start || found > -1 || !fn(item)) ? found : index, -1)\n    }\n\n    exports.h = h;\n    exports.patch = patch;\n    exports.make = make;\n    exports.mount = mount;\n    exports.define = define;\n    exports.update = update;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=zxdom.js.map\n"]}